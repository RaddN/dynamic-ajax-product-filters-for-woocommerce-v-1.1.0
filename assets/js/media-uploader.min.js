/**
 * WordPress Media Uploader Handler
 * Handles image selection and upload functionality using WordPress Media Library
 */
(function($) {
    'use strict';

    /**
     * Initialize media uploader functionality when document is ready
     */
    $(document).ready(function() {
        initializeMediaUploader();
    });

    /**
     * Initialize the media uploader event handlers
     */
    function initializeMediaUploader() {
        $('.upload-image-button').on('click', handleImageUploadClick);
    }

    /**
     * Handle click event for image upload buttons
     * @param {Event} event - The click event object
     */
    function handleImageUploadClick(event) {
        event.preventDefault();
        
        const $button = $(this);
        const $inputField = $button.prev('input');
        const $imgpreview = $button.siblings('img');
        
        // Validate that we have a valid input field
        if (!$inputField.length) {
            console.warn('No input field found for upload button');
            return;
        }

        openMediaFrame($inputField, $imgpreview);
    }

    /**
     * Open WordPress media frame for image selection
     * @param {jQuery} $inputField - The input field to populate with selected image URL
     */
    function openMediaFrame($inputField,$imgpreview) {
        // Create media frame if it doesn't exist or reuse existing one
        const mediaFrame = wp.media.frames.imageUploadFrame = wp.media({
            title: 'Select or Upload an Image',
            button: {
                text: 'Use this Image'
            },
            multiple: false,
            library: {
                type: 'image'
            }
        });

        // Handle media selection
        mediaFrame.on('select', function() {
            handleMediaSelection(mediaFrame, $inputField, $imgpreview);
        });

        // Open the media frame
        mediaFrame.open();
    }

    /**
     * Handle media selection from WordPress media library
     * @param {Object} mediaFrame - WordPress media frame object
     * @param {jQuery} $inputField - The input field to populate
     * @param {jQuery} $imgpreview - The img field to populate
     */
    function handleMediaSelection(mediaFrame, $inputField, $imgpreview) {
        try {
            const selection = mediaFrame.state().get('selection');
            const selectedImage = selection.first();
            
            if (selectedImage) {
                const imageData = selectedImage.toJSON();
                
                // Validate image data
                if (imageData && imageData.url) {
                    $inputField.val(imageData.url);
                    $imgpreview.attr('src', imageData.url);
                    
                    // Trigger change event for any listeners
                    $inputField.trigger('change');
                } else {
                    console.error('Invalid image data received');
                }
            }
        } catch (error) {
            console.error('Error handling media selection:', error);
        }
    }

})(jQuery);